DOWNLOAD

Download Google Chrome and install (follow installer instructions): click 'Download Chrome for another platform' and select 'Windows 8 / 7 64-bit'
Download 7-Zip and install (follow installer instructions): .msi for 64-bit x64
Download Node.js and install (follow installer instructions): version v0.12.xx
Download ImageMagick and install (follow installer instructions) less than 7 version
Download Ghostscript and install (follow installer instructions): Windows (64 bit), GPL Release
Download Git for Windows and install (follow installer instructions)
Download FFmpeg (64-bit Shared and 64-bit Dev)
Download ExifTool (Windows Executable)

INSTALL FFMPEG
Use 7-Zip to extract FFmpeg downloads (right-click > 7-Zip > Extract Here)
Create folder 'C:\Dev' if it does not already exist
Move extracted FFmpeg Shared folder to 'C:\Dev\' and name it 'ffmpeg-win64-shared'
Move extracted FFmpeg Dev folder to 'C:\Dev\' and name it 'ffmpeg-win64-dev'
Make sure to download the latest version or at least version 3.x

INSTALL EXIFTOOL
Use 7-Zip to extract ExifTool download (Right-click > 7-Zip > Extract Here)
Create folder 'C:\local\bin' if it does not already exist
Rename binary to 'exiftool.exe' and move to 'C:\local\bin'

SET ENVIRONMENT
For Windows 7
Right-click 'Computer'
Click 'Properties'
Click 'Advanced system settings'
For Windows 8.1
Click Windows Logo and type 'env'
Click 'Edit the system environment variables'
Click 'Environment Variables'
Add 'C:\Program Files (x86)\Git\bin;C:\Program Files\7-Zip;C:\local\bin;C:\Dev\ffmpeg-win64-shared\bin' to your system PATH variable
You may have to log out and log back in for the environment variables to apply
Edit Windows PATH

CLONE SAGE2
Launch command prompt (cmd.exe)
cd <directory_to_install_SAGE2>
git clone https://bitbucket.org/sage2/sage2.git
GENERATE HTTPS KEYS
Edit '<SAGE2_directory>\keys\GO-windows.bat'
Add lines with list of hostnames for your server
Save file
Double click 'GO-windows.bat'
On Windows 8.1 you will need right-click and select 'Run as Administrator'
INSTALL NODE.JS MODULES
Launch command prompt (cmd.exe)

cd <SAGE2_directory>
npm run in (install pre-compiled binary modules) or npm install (compile and install binary modules - requires Visual Studio Express 2013 for Windows Desktop)
If binary packages are not available (such as after a new version of node) and need to be compiled, you will also need to install Python 2.7.10 (not 3.x)
Make sure python.exe is added to Path (either manually or enabled in during Python install under Customize Python).
Troubleshooting

'Error: ENOENT, stat 'C:\Users{User Name}\AppData\Roaming\npm'
You will need to manually create that folder
'C:\Dev\ffmpeg-win64-dev\include\libavutil\common.h(34): fatal error C1083: Cannot open include file: 'inttypes.h': No such file or directory'
Run npm install node-demux
If you have multiple Visual Studio installs, you may also need to add --msvc_version=2013
Requires at least Visual Studio 2013 to install

npm install
npm run in

npm install -g node-gyp
npm install node-demux

C:/ImageMagick-6.9.6-Q8 by default
npm install gm
place (copy from defaultWin-cfg) localhost-cfg.json with
		dependencies: {
		ImageMagick: "C:/ImageMagick-6.9.6-Q8/",
		FFMpeg: "C:/Dev/ffmpeg-win64-shared/bin/"

npm install node-exiftool
npm install npm install dist-exiftool
npm install exiftool.exe
npm -g install exiftool

npm node server.js